script:
  shutdown_brontosaurus:
    sequence:
    - service: hassio.addon_stdin
      data:
        addon: core_rpc_shutdown
        input: Brontosaurus
  shutdown_velociraptor:
    sequence:
    - service: hassio.addon_stdin
      data:
        addon: core_rpc_shutdown
        input: Velociraptor
  shutdown_allosaurus:
    sequence:
    - service: hassio.addon_stdin
      data:
        addon: core_rpc_shutdown
        input: Allosaurus
  rtasks_dryerfilter_reset:
    sequence:
    - service: mqtt.publish
      data:
        payload: reset
        topic: tasks/dryerfilter/action
  rtasks_waterfilter_reset:
    sequence:
    - service: mqtt.publish
      data:
        payload: reset
        topic: tasks/waterfilter/action
  harmony_pc:
    sequence:
    - service: mqtt.publish
      data:
        payload: shortpress
        topic: harmony/pc
  harmony_ziggo:
    sequence:
    - service: mqtt.publish
      data:
        payload: shortpress
        topic: harmony/tv
  harmony_console:
    sequence:
    - service: mqtt.publish
      data:
        payload: shortpress
        topic: harmony/console
  harmony_shieldtv:
    sequence:
    - service: mqtt.publish
      data:
        payload: shortpress
        topic: harmony/shieldtv
  harmony_pc_long:
    sequence:
    - service: mqtt.publish
      data:
        payload: longpress
        topic: harmony/pc
  harmony_ziggo_long:
    sequence:
    - service: mqtt.publish
      data:
        payload: longpress
        topic: harmony/tv
  harmony_console_long:
    sequence:
    - service: mqtt.publish
      data:
        payload: longpress
        topic: harmony/console
  harmony_shieldtv_long:
    sequence:
    - service: mqtt.publish
      data:
        payload: longpress
        topic: harmony/shieldtv
  selfheal_initiate:
    sequence:
    - data:
        payload: selfheal_inititate
        topic: selfheal/button/push
      service: mqtt.publish
  selfheal_protocol:
    sequence:
    - data:
        addon: core_mosquitto
      service: hassio.addon_restart
  powerflow_brontosaurus_button:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/brontosaurus/powerflow/button
  powerflow_velociraptor_button:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/velociraptor/powerflow/button
  powerflow_allosaurus_button:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/allosaurus/powerflow/button
  powerflow_brontosaurus_resume_auto:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/brontosaurus/powerflow/resume_auto
  powerflow_velociraptor_resume_auto:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/velociraptor/powerflow/resume_auto
  powerflow_allosaurus_resume_auto:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/allosaurus/powerflow/resume_auto
  brontosaurus_action_power:
    sequence:
    - service: mqtt.publish
      data:
        payload: Shutdown
        topic: machines/brontosaurus/action
  velociraptor_action_power:
    sequence:
    - service: mqtt.publish
      data:
        payload: Shutdown
        topic: machines/velociraptor/action
  allosaurus_action_power:
    sequence:
    - service: mqtt.publish
      data:
        payload: Shutdown
        topic: machines/allosaurus/action
  triceratops_action_power:
    sequence:
    - service: mqtt.publish
      data:
        payload: Shutdown
        topic: machines/triceratops/action
  brontosaurus_action_reboot:
    sequence:
    - service: mqtt.publish
      data:
        payload: Reboot
        topic: machines/brontosaurus/action
  velociraptor_action_reboot:
    sequence:
    - service: mqtt.publish
      data:
        payload: Reboot
        topic: machines/velociraptor/action
  allosaurus_action_reboot:
    sequence:
    - service: mqtt.publish
      data:
        payload: Reboot
        topic: machines/allosaurus/action
  triceratops_action_reboot:
    sequence:
    - service: mqtt.publish
      data:
        payload: Reboot
        topic: machines/triceratops/action
  brontosaurus_action_suspend:
    sequence:
    - service: mqtt.publish
      data:
        payload: Suspend
        topic: machines/brontosaurus/action
  velociraptor_action_suspend:
    sequence:
    - service: mqtt.publish
      data:
        payload: Suspend
        topic: machines/velociraptor/action
  allosaurus_action_suspend:
    sequence:
    - service: mqtt.publish
      data:
        payload: Suspend
        topic: machines/allosaurus/action
  brontosaurus_action_confirm:
    sequence:
    - service: mqtt.publish
      data:
        payload: confirm
        topic: machines/brontosaurus/action
  velociraptor_action_confirm:
    sequence:
    - service: mqtt.publish
      data:
        payload: confirm
        topic: machines/velociraptor/action
  allosaurus_action_confirm:
    sequence:
    - service: mqtt.publish
      data:
        payload: confirm
        topic: machines/allosaurus/action
  triceratops_action_confirm:
    sequence:
    - service: mqtt.publish
      data:
        payload: confirm
        topic: machines/triceratops/action
  brontosaurus_action_cancel:
    sequence:
    - service: mqtt.publish
      data:
        payload: cancel
        topic: machines/brontosaurus/action
  velociraptor_action_cancel:
    sequence:
    - service: mqtt.publish
      data:
        payload: cancel
        topic: machines/velociraptor/action
  allosaurus_action_cancel:
    sequence:
    - service: mqtt.publish
      data:
        payload: cancel
        topic: machines/allosaurus/action
  triceratops_action_cancel:
    sequence:
    - service: mqtt.publish
      data:
        payload: cancel
        topic: machines/triceratops/action
  pachy_clean:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: vacuum/button/clean
  pachy_pause:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: vacuum/button/pause
  pachy_dock:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: vacuum/button/dock
  pachy_quiet:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: vacuum/button/quiet
  pachy_stop:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: vacuum/button/stop
  harmony_light_1:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: harmony/lightbutton1
  harmony_light_2:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: harmony/lightbutton2
  harmony_socket_1:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: harmony/socketbutton1
  harmony_socket_2:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: harmony/socketbutton2
  thermostat_increase_click:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: thermostat/increase
  thermostat_decrease_click:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: thermostat/decrease
  thermostat_mode_click:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: thermostat/mode_button
  washer_emptied_click:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: appliances/washer/emptied-button
  dryer_emptied_click:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: appliances/dryer/emptied-button
  hassiocontrol_homeassistant_restart:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/triceratops/homeassistant/restart
  hassiocontrol_nodered_restart:
    sequence:
    - service: mqtt.publish
      data:
        payload: click
        topic: machines/triceratops/nodered/restart
  iotlink_allosaurus_refresh:
    alias: "Allosaurus - Refresh"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/refresh"
        payload: ""
  iotlink_allosaurus_shutdown:
    alias: "Allosaurus - Shutdown"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/shutdown"
        payload: ""
  iotlink_allosaurus_reboot:
    alias: "Allosaurus - Reboot"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/reboot"
        payload: ""
  iotlink_allosaurus_hibernate:
    alias: "Allosaurus - Hibernate"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/hibernate"
        payload: ""
  iotlink_allosaurus_suspend:
    alias: "Allosaurus - Suspend"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/suspend"
        payload: ""
  iotlink_allosaurus_logoff:
    alias: "Allosaurus - Logoff"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/logoff"
        payload: ""
  iotlink_allosaurus_lock:
    alias: "Allosaurus - Lock"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/lock"
        payload: ""
  iotlink_allosaurus_vol_mute:
    alias: "Allosaurus - Toggle Mute"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/allosaurus/commands/volume/mute"
        payload: ""
  iotlink_velociraptor_refresh:
    alias: "Velociraptor - Refresh"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/refresh"
        payload: ""
  iotlink_velociraptor_shutdown:
    alias: "Velociraptor - Shutdown"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/shutdown"
        payload: ""
  iotlink_velociraptor_reboot:
    alias: "Velociraptor - Reboot"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/reboot"
        payload: ""
  iotlink_velociraptor_hibernate:
    alias: "Velociraptor - Hibernate"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/hibernate"
        payload: ""
  iotlink_velociraptor_suspend:
    alias: "Velociraptor - Suspend"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/suspend"
        payload: ""
  iotlink_velociraptor_logoff:
    alias: "Velociraptor - Logoff"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/logoff"
        payload: ""
  iotlink_velociraptor_lock:
    alias: "Velociraptor - Lock"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/lock"
        payload: ""
  iotlink_velociraptor_vol_mute:
    alias: "Velociraptor - Toggle Mute"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/velociraptor/commands/volume/mute"
        payload: ""
  iotlink_brontosaurus_refresh:
    alias: "Brontosaurus- Refresh"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/refresh"
        payload: ""
  iotlink_brontosaurus_shutdown:
    alias: "Brontosaurus - Shutdown"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/shutdown"
        payload: ""
  iotlink_brontosaurus_reboot:
    alias: "Brontosaurus - Reboot"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/reboot"
        payload: ""
  iotlink_brontosaurus_hibernate:
    alias: "Brontosaurus - Hibernate"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/hibernate"
        payload: ""
  iotlink_brontosaurus_suspend:
    alias: "Brontosaurus - Suspend"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/suspend"
        payload: ""
  iotlink_brontosaurus_logoff:
    alias: "Brontosaurus - Logoff"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/logoff"
        payload: ""
  iotlink_brontosaurus_lock:
    alias: "Brontosaurus - Lock"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/lock"
        payload: ""
  iotlink_brontosaurus_vol_mute:
    alias: "Brontosaurus - Toggle Mute"
    sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/workgroup/brontosaurus/commands/volume/mute"
        payload: ""
  iotlink_allosaurus_clean:
    alias: "Clean Up"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/allosaurus/commands/run"
          payload: '{ "command": "C:\\Users\\Laure\\AppData\\Roaming\\Batchfiles\\forced_clean.bat", "path": "C:\\Users\\Laure\\AppData\\Roaming\\Batchfiles\\", "user": "", "visible": true, "fallback": true }'
  iotlink_velociraptor_clean:
    alias: "Clean Up"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/velociraptor/commands/run"
          payload: '{ "command": "C:\\Users\\Laure\\AppData\\Roaming\\Batchfiles\\forced_clean.bat", "path": "C:\\Users\\Laure\\AppData\\Roaming\\Batchfiles\\", "user": "", "visible": true, "fallback": true }'
